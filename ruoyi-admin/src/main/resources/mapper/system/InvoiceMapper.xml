<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.InvoiceMapper">

    <resultMap type="Invoice" id="InvoiceResult">
        <result property="id"    column="id"    />
        <result property="invoiceid"    column="invoiceid"    />
        <result property="money"    column="money"    />
        <result property="invoicetime"    column="invoicetime"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectInvoiceVo">
        select id, invoiceid, money, invoicetime, create_time from invoice
    </sql>

    <select id="selectInvoiceList" parameterType="Invoice" resultMap="InvoiceResult">
        <include refid="selectInvoiceVo"/>
        <where>
            <if test="invoiceid != null  and invoiceid != ''"> and invoiceid = #{invoiceid}</if>
        </where>
    </select>

    <select id="selectInvoiceById" parameterType="Long" resultMap="InvoiceResult">
        <include refid="selectInvoiceVo"/>
        where id = #{id}
    </select>




    <select id="selectInvoiceByInvoiceid" parameterType="Long" resultMap="InvoiceResult">
        <include refid="selectInvoiceVo"/>
        where invoiceid = #{invoiceid}
    </select>
    <select id="selectInvoiceListbycontractid"  resultMap="InvoiceResult">
        select invoiceid from invoice inner join sell_detail on invoice.id=sell_detail.invoice_id
        where sell_detail.contractid=#{contractid}
        GROUP BY   invoiceid
    </select>



    <insert id="insertInvoice" parameterType="Invoice" useGeneratedKeys="true" keyProperty="id">
        insert into invoice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="invoiceid != null  and invoiceid != ''">invoiceid,</if>
            <if test="money != null ">money,</if>
            <if test="invoicetime != null ">invoicetime,</if>
            <if test="createTime != null ">create_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="invoiceid != null  and invoiceid != ''">#{invoiceid},</if>
            <if test="money != null ">#{money},</if>
            <if test="invoicetime != null ">#{invoicetime},</if>
            <if test="createTime != null ">#{createTime},</if>
        </trim>
    </insert>

    <update id="updateInvoice" parameterType="Invoice">
        update invoice
        <trim prefix="SET" suffixOverrides=",">
            <if test="invoiceid != null  and invoiceid != ''">invoiceid = #{invoiceid},</if>
            <if test="money != null ">money = #{money},</if>
            <if test="invoicetime != null ">invoicetime = #{invoicetime},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>


    <update id="updateInvoiceByInvoiceid">
        update invoice set  money=money+#{newmoney} where id=#{id}
    </update>

    <delete id="deleteInvoiceById" parameterType="Long">
        delete from invoice where id = #{id}
    </delete>

    <delete id="deleteInvoiceByIds" parameterType="String">
        delete from invoice where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>



    <select id="sumMoneyGYear" resultType="Double">
        select sum(money)  from invoice
        where  year(invoicetime) = #{newDate}
    </select>


</mapper>