<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.PurchaseinvoiceMapper">

    <resultMap type="Purchaseinvoice" id="PurchaseinvoiceResult">
        <result property="id"    column="id"    />
        <result property="purchaseinvoiceid"    column="purchaseinvoiceid"    />
        <result property="money"    column="money"    />
        <result property="purchaseinvoicetime"    column="purchaseinvoicetime"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>






    <sql id="selectPurchaseinvoiceVo">
        select id, purchaseinvoiceid, money, purchaseinvoicetime, create_time from pur_invoice
    </sql>

    <select id="selectPurchaseinvoiceByContractid" resultMap="PurchaseinvoiceResult">
        select purchaseinvoiceid from pur_invoice p inner join pur_detail s on p.id=s.purchaseinvoice_id
        where s.purchasecontractid like concat('%',#{purchasecontractid},'%')
        GROUP BY   purchaseinvoiceid


    </select>

    <select id="selectPurchaseinvoiceList" parameterType="Purchaseinvoice" resultMap="PurchaseinvoiceResult">
       <include refid="selectPurchaseinvoiceVo"></include>
        <where>
            <if test="purchaseinvoiceid != null  and purchaseinvoiceid != ''"> and purchaseinvoiceid = #{purchaseinvoiceid}</if>
        </where>
    </select>




    <select id="selectPurchaseinvoiceById" parameterType="Long" resultMap="PurchaseinvoiceResult">
        <include refid="selectPurchaseinvoiceVo"/>
        where id = #{id}
    </select>

    <select id="selectPurchaseinvoiceByPurchaseinvoiceid"  resultMap="PurchaseinvoiceResult">
        <include refid="selectPurchaseinvoiceVo"/>
        where purchaseinvoiceid = #{purchaseinvoiceid}
    </select>
    <select id="selectInvoiceListByIdGetPurchaseContractid" resultType="java.lang.Long">
        select purchasecontract_id from pur_invoice i inner join pur_detail s on i.id=s.purchaseinvoice_id
        where i.id=#{id}
        GROUP BY purchasecontract_id
    </select>

    <insert id="insertPurchaseinvoice" parameterType="Purchaseinvoice" useGeneratedKeys="true" keyProperty="id">
        insert into pur_invoice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="purchaseinvoiceid != null  and purchaseinvoiceid != ''">purchaseinvoiceid,</if>
            <if test="money != null ">money,</if>
            <if test="purchaseinvoicetime != null ">purchaseinvoicetime,</if>
            <if test="createTime != null ">create_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="purchaseinvoiceid != null  and purchaseinvoiceid != ''">#{purchaseinvoiceid},</if>
            <if test="money != null ">#{money},</if>
            <if test="purchaseinvoicetime != null ">#{purchaseinvoicetime},</if>
            <if test="createTime != null ">#{createTime},</if>
         </trim>
    </insert>

    <update id="updatePurchaseinvoice" parameterType="Purchaseinvoice">
        update pur_invoice
        <trim prefix="SET" suffixOverrides=",">
            <if test="purchaseinvoiceid != null  and purchaseinvoiceid != ''">purchaseinvoiceid = #{purchaseinvoiceid},</if>
            <if test="money != null ">money = #{money},</if>
            <if test="purchaseinvoicetime != null ">purchaseinvoicetime = #{purchaseinvoicetime},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
        </trim>
        where id = #{id}
    </update>
    <update id="updatePurchaseinvoiceByPurchaseinvoiceid">
         update pur_invoice set money=money+#{newmoney} where id=#{id}
    </update>

    <delete id="deletePurchaseinvoiceById" parameterType="Long">
        delete from pur_invoice where id = #{id}
    </delete>

    <delete id="deletePurchaseinvoiceByIds" parameterType="String">
        delete from pur_invoice where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>